// <auto-generated />
using GifStorage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GifStorage.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231023175055_Make value of the Gif.Url is unique")]
    partial class MakevalueoftheGifUrlisunique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("GifStorage.Data.Entities.Gif", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("Url");

                    b.ToTable("Gifs");
                });

            modelBuilder.Entity("GifStorage.Data.Entities.GifTag", b =>
                {
                    b.Property<long>("GifId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GifId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("GifTags");
                });

            modelBuilder.Entity("GifStorage.Data.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GifStorage.Data.Entities.GifTag", b =>
                {
                    b.HasOne("GifStorage.Data.Entities.Gif", "Gif")
                        .WithMany("GifTags")
                        .HasForeignKey("GifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GifStorage.Data.Entities.Tag", "Tag")
                        .WithMany("GifTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gif");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GifStorage.Data.Entities.Gif", b =>
                {
                    b.Navigation("GifTags");
                });

            modelBuilder.Entity("GifStorage.Data.Entities.Tag", b =>
                {
                    b.Navigation("GifTags");
                });
#pragma warning restore 612, 618
        }
    }
}
